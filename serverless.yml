service: python-aws-usuarios

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.8
  region: us-east-1
  stage: "dev"
  timeout: 10
  memorySize: 128
  environment:
    DYNAMODB_TABLE: ${self:custom.dynamotable}
    REGION_NAME: ${self:provider.region}
    DESTINATION_TABLE: ${self:custom.destinationTable}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: 
            - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
            - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DESTINATION_TABLE}"
   
functions:
  create:
    handler: src/handler.create
    events:
      - http:
          path: user/create
          method: post
  get:
    handler: src/handler.get
    events:
      - http:
          path: user/get/{userId}
          method: get
  all:
    handler: src/handler.all
    events:
      - http:
          path: user/all
          method: get
  replication:
    handler: src/handler.replication
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - DynamoDBTable
              - StreamArn


resources:
 Resources:
   DynamoDBTable:
     Type: AWS::DynamoDB::Table
     Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
   ReplicationDynamoDBTable:
     Type: AWS::DynamoDB::Table
     Properties:
        TableName: ${self:provider.environment.DESTINATION_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

plugins:
  - serverless-python-requirements
custom:
  dynamotable: python-aws-usuarios
  destinationTable: python-replication-usuarios
 
  pythonRequirements:
    dockerizePip: non-linux
 